{
  "scanId": "1755482304878",
  "timestamp": "2025-08-17T00:00:00.000Z",
  "ksiId": "KSI-CNA-05",
  "scanType": "automated",
  "status": "completed",
  "results": {
    "summary": {
      "totalChecks": 2,
      "passed": 1,
      "failed": 1,
      "warnings": 0
    },
    "dosProtectionStrategies": {
      "networkLevel": [
        "Azure DDoS Protection Standard",
        "Web Application Firewall (WAF)",
        "Network Security Groups with restrictive rules",
        "Azure Front Door with rate limiting",
        "Geographic access restrictions"
      ],
      "applicationLevel": [
        "Request rate limiting per client",
        "Connection pooling and limits",
        "Circuit breaker patterns",
        "Health check endpoints",
        "Graceful degradation mechanisms"
      ],
      "infrastructureLevel": [
        "Auto-scaling policies",
        "Resource quotas and limits",
        "Load balancing across multiple instances",
        "CDN for static content delivery",
        "Monitoring and alerting systems"
      ]
    },
    "detectionMethods": {
      "azureNativeTools": [
        "Azure Monitor for DDoS metrics",
        "Application Gateway analytics",
        "NSG flow logs analysis",
        "Azure Security Center recommendations"
      ],
      "powershellCommands": [
        "Get-AzNetworkSecurityGroup | Get-AzNetworkSecurityRuleConfig",
        "Get-AzApplicationGateway | Select-Object -ExpandProperty WebApplicationFirewallConfiguration",
        "Get-AzDdosProtectionPlan"
      ],
      "azureCLICommands": [
        "az network ddos-protection show",
        "az network application-gateway waf-config show",
        "az container show --resource-group fedramp-rg --name app-container --query 'containers[0].resources'"
      ]
    },
    "checks": [
      {
        "checkId": "CNA-05-001",
        "name": "Application Gateway DDoS Protection Validation",
        "status": "PASS",
        "severity": "HIGH",
        "description": "Application Gateway should be properly configured with DDoS protection and rate limiting",
        "findings": {
          "ddosProtection": {
            "ddosProtectionPlan": "fedramp20x-ddos-plan",
            "ddosProtectionEnabled": true,
            "protectionMode": "Always On",
            "mitigation": {
              "autoMitigation": true,
              "thresholdTriggers": {
                "packetsPerSecond": 100000,
                "bytesPerSecond": 25000000,
                "synPacketsPerSecond": 20000
              }
            }
          },
          "webApplicationFirewall": {
            "enabled": true,
            "mode": "Prevention",
            "ruleSet": "OWASP_3.2",
            "customRules": [
              {
                "name": "RateLimitPerIP",
                "priority": 100,
                "action": "Block",
                "conditions": [
                  {
                    "matchVariable": "RemoteAddr",
                    "operator": "IPMatch",
                    "rateLimitThreshold": 1000,
                    "rateLimitDuration": 60
                  }
                ]
              },
              {
                "name": "GeographicRestriction",
                "priority": 200,
                "action": "Block",
                "conditions": [
                  {
                    "matchVariable": "RemoteAddr",
                    "operator": "GeoMatch",
                    "negationCondition": true,
                    "matchValues": [
                      "US",
                      "CA"
                    ]
                  }
                ]
              }
            ]
          },
          "rateLimiting": {
            "globalRateLimit": {
              "requestsPerMinute": 10000,
              "enabled": true
            },
            "perClientRateLimit": {
              "requestsPerMinute": 100,
              "enabled": true,
              "windowSizeMinutes": 1
            }
          },
          "connectionLimits": {
            "maxConcurrentConnections": 1000,
            "connectionTimeout": 30,
            "idleTimeout": 240
          },
          "monitoring": {
            "metricsEnabled": true,
            "alertRules": [
              {
                "name": "HighRequestRate",
                "metric": "RequestCountPerSecond",
                "threshold": 5000,
                "action": "AutoScale"
              },
              {
                "name": "DDoSAttackDetected",
                "metric": "DDoSAttack",
                "threshold": 1,
                "action": "Alert"
              }
            ],
            "logAnalytics": {
              "enabled": true,
              "workspace": "fedramp20x-logs"
            }
          }
        },
        "testResults": {
          "loadTesting": {
            "normalLoad": {
              "requestsPerSecond": 1000,
              "responseTime": "< 100ms",
              "successRate": "99.9%"
            },
            "stressTest": {
              "requestsPerSecond": 10000,
              "responseTime": "< 500ms",
              "successRate": "99.5%",
              "autoScalingTriggered": true
            },
            "ddosSimulation": {
              "attackType": "SYN Flood",
              "mitigated": true,
              "timeToMitigation": "< 30 seconds",
              "serviceAvailability": "100%"
            }
          }
        },
        "remediation": "DDoS protection properly configured and validated",
        "checkType": "dosProtectio"
      },
      {
        "checkId": "CNA-05-002",
        "name": "Container Instance Resource Limits and DoS Protection",
        "status": "FAIL",
        "severity": "HIGH",
        "description": "Container instances should have proper resource limits and DoS protection configured",
        "findings": {
          "resourceLimits": {
            "cpuLimits": {
              "configured": false,
              "issue": "No CPU limits configured - vulnerable to CPU exhaustion attacks"
            },
            "memoryLimits": {
              "configured": false,
              "issue": "No memory limits configured - vulnerable to memory exhaustion attacks"
            },
            "networkLimits": {
              "bandwidthLimit": null,
              "connectionLimit": null,
              "issue": "No network resource limits configured"
            }
          },
          "networkSecurity": {
            "publicIpExposed": true,
            "networkSecurityGroup": {
              "associated": true,
              "rules": [
                {
                  "name": "AllowAnyInbound",
                  "priority": 100,
                  "direction": "Inbound",
                  "access": "Allow",
                  "protocol": "*",
                  "sourceAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "issue": "Overly permissive rule allows any traffic from anywhere"
                }
              ]
            }
          },
          "ddosProtection": {
            "ddosProtectionEnabled": false,
            "ratelimiting": false,
            "issue": "Container directly exposed to internet without DDoS protection"
          },
          "applicationSecurity": {
            "healthChecks": {
              "configured": false,
              "issue": "No health checks configured - cannot detect service degradation"
            },
            "circuitBreaker": {
              "configured": false,
              "issue": "No circuit breaker pattern implemented"
            },
            "requestThrottling": {
              "configured": false,
              "issue": "No request throttling at application level"
            }
          },
          "monitoring": {
            "resourceMonitoring": false,
            "alerting": false,
            "issue": "No monitoring for resource exhaustion or DoS attacks"
          }
        },
        "vulnerabilityAssessment": {
          "dosVulnerabilities": [
            {
              "type": "Resource Exhaustion",
              "severity": "HIGH",
              "description": "Application vulnerable to CPU/memory exhaustion attacks",
              "impact": "Service unavailability"
            },
            {
              "type": "Connection Flooding",
              "severity": "HIGH",
              "description": "No connection limits - vulnerable to connection exhaustion",
              "impact": "Service unavailability"
            },
            {
              "type": "Application Layer DoS",
              "severity": "MEDIUM",
              "description": "No request rate limiting at application level",
              "impact": "Performance degradation"
            }
          ]
        },
        "testResults": {
          "dosTests": [
            {
              "attackType": "CPU Exhaustion",
              "result": "VULNERABLE",
              "impact": "Service became unresponsive after 30 seconds"
            },
            {
              "attackType": "Memory Exhaustion",
              "result": "VULNERABLE",
              "impact": "Container crashed due to out-of-memory condition"
            },
            {
              "attackType": "Connection Flooding",
              "result": "VULNERABLE",
              "impact": "Service stopped accepting new connections"
            }
          ]
        },
        "remediation": "CRITICAL: 1) Configure CPU and memory limits for containers, 2) Remove direct public IP exposure, 3) Route traffic through Application Gateway with DDoS protection, 4) Implement restrictive NSG rules, 5) Add health checks and circuit breakers, 6) Enable resource monitoring and alerting, 7) Implement application-level rate limiting",
        "checkType": "dosProtectio"
      }
    ]
  }
}